// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
  const ::MsgLogin* login_;
  const ::MsgJoinTable* jointable_;
  const ::MsgLeaveTable* leavetable_;
  const ::MsgRaise* raise_;
  const ::MsgFold* fold_;
  const ::MsgCall* call_;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
  const ::MsgLobbyView* lobbyview_;
  const ::MsgTableView* tableview_;
} _Response_default_instance_;
class MsgLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgLogin>
      _instance;
} _MsgLogin_default_instance_;
class MsgJoinTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgJoinTable>
      _instance;
} _MsgJoinTable_default_instance_;
class MsgLeaveTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgLeaveTable>
      _instance;
} _MsgLeaveTable_default_instance_;
class MsgRaiseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgRaise>
      _instance;
} _MsgRaise_default_instance_;
class MsgFoldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFold>
      _instance;
} _MsgFold_default_instance_;
class MsgCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCall>
      _instance;
} _MsgCall_default_instance_;
class MsgCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCard>
      _instance;
} _MsgCard_default_instance_;
class MsgPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgPlayer>
      _instance;
} _MsgPlayer_default_instance_;
class MsgTableInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTableInfo>
      _instance;
} _MsgTableInfo_default_instance_;
class MsgLobbyViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgLobbyView>
      _instance;
} _MsgLobbyView_default_instance_;
class MsgTableViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTableView>
      _instance;
} _MsgTableView_default_instance_;
namespace protobuf_Protocol_2eproto {
void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protocol_2eproto::InitDefaultsMsgLogin();
  protobuf_Protocol_2eproto::InitDefaultsMsgJoinTable();
  protobuf_Protocol_2eproto::InitDefaultsMsgLeaveTable();
  protobuf_Protocol_2eproto::InitDefaultsMsgRaise();
  protobuf_Protocol_2eproto::InitDefaultsMsgFold();
  protobuf_Protocol_2eproto::InitDefaultsMsgCall();
  {
    void* ptr = &::_Request_default_instance_;
    new (ptr) ::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protocol_2eproto::InitDefaultsMsgLobbyView();
  protobuf_Protocol_2eproto::InitDefaultsMsgTableView();
  {
    void* ptr = &::_Response_default_instance_;
    new (ptr) ::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

void InitDefaultsMsgLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgLogin_default_instance_;
    new (ptr) ::MsgLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgLogin::InitAsDefaultInstance();
}

void InitDefaultsMsgLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgLoginImpl);
}

void InitDefaultsMsgJoinTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgJoinTable_default_instance_;
    new (ptr) ::MsgJoinTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgJoinTable::InitAsDefaultInstance();
}

void InitDefaultsMsgJoinTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgJoinTableImpl);
}

void InitDefaultsMsgLeaveTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgLeaveTable_default_instance_;
    new (ptr) ::MsgLeaveTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgLeaveTable::InitAsDefaultInstance();
}

void InitDefaultsMsgLeaveTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgLeaveTableImpl);
}

void InitDefaultsMsgRaiseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgRaise_default_instance_;
    new (ptr) ::MsgRaise();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgRaise::InitAsDefaultInstance();
}

void InitDefaultsMsgRaise() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgRaiseImpl);
}

void InitDefaultsMsgFoldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgFold_default_instance_;
    new (ptr) ::MsgFold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgFold::InitAsDefaultInstance();
}

void InitDefaultsMsgFold() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgFoldImpl);
}

void InitDefaultsMsgCallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgCall_default_instance_;
    new (ptr) ::MsgCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgCall::InitAsDefaultInstance();
}

void InitDefaultsMsgCall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgCallImpl);
}

void InitDefaultsMsgCardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgCard_default_instance_;
    new (ptr) ::MsgCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgCard::InitAsDefaultInstance();
}

void InitDefaultsMsgCard() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgCardImpl);
}

void InitDefaultsMsgPlayerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protocol_2eproto::InitDefaultsMsgCard();
  {
    void* ptr = &::_MsgPlayer_default_instance_;
    new (ptr) ::MsgPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgPlayer::InitAsDefaultInstance();
}

void InitDefaultsMsgPlayer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgPlayerImpl);
}

void InitDefaultsMsgTableInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MsgTableInfo_default_instance_;
    new (ptr) ::MsgTableInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgTableInfo::InitAsDefaultInstance();
}

void InitDefaultsMsgTableInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgTableInfoImpl);
}

void InitDefaultsMsgLobbyViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protocol_2eproto::InitDefaultsMsgTableInfo();
  {
    void* ptr = &::_MsgLobbyView_default_instance_;
    new (ptr) ::MsgLobbyView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgLobbyView::InitAsDefaultInstance();
}

void InitDefaultsMsgLobbyView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgLobbyViewImpl);
}

void InitDefaultsMsgTableViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protocol_2eproto::InitDefaultsMsgCard();
  protobuf_Protocol_2eproto::InitDefaultsMsgPlayer();
  {
    void* ptr = &::_MsgTableView_default_instance_;
    new (ptr) ::MsgTableView();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgTableView::InitAsDefaultInstance();
}

void InitDefaultsMsgTableView() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgTableViewImpl);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::RequestDefaultTypeInternal, login_),
  offsetof(::RequestDefaultTypeInternal, jointable_),
  offsetof(::RequestDefaultTypeInternal, leavetable_),
  offsetof(::RequestDefaultTypeInternal, raise_),
  offsetof(::RequestDefaultTypeInternal, fold_),
  offsetof(::RequestDefaultTypeInternal, call_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Request, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, error_),
  offsetof(::ResponseDefaultTypeInternal, lobbyview_),
  offsetof(::ResponseDefaultTypeInternal, tableview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Response, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgLogin, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgJoinTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgJoinTable, tableid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgLeaveTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgRaise, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgRaise, chips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgFold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgCard, cardvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgCard, cardsuit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgPlayer, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgPlayer, chips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgPlayer, hand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgPlayer, dealer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableInfo, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableInfo, maxplayers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableInfo, players_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgLobbyView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgLobbyView, tables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, tablestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, roundstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, pots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgTableView, players_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Request)},
  { 12, -1, sizeof(::Response)},
  { 21, -1, sizeof(::MsgLogin)},
  { 27, -1, sizeof(::MsgJoinTable)},
  { 33, -1, sizeof(::MsgLeaveTable)},
  { 38, -1, sizeof(::MsgRaise)},
  { 44, -1, sizeof(::MsgFold)},
  { 49, -1, sizeof(::MsgCall)},
  { 54, -1, sizeof(::MsgCard)},
  { 61, -1, sizeof(::MsgPlayer)},
  { 70, -1, sizeof(::MsgTableInfo)},
  { 79, -1, sizeof(::MsgLobbyView)},
  { 85, -1, sizeof(::MsgTableView)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgJoinTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgLeaveTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgRaise_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgFold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgTableInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgLobbyView_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgTableView_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Protocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Protocol.proto\"\312\001\n\007Request\022\032\n\005login\030\001 "
      "\001(\0132\t.MsgLoginH\000\022\"\n\tjoinTable\030\002 \001(\0132\r.Ms"
      "gJoinTableH\000\022$\n\nleaveTable\030\003 \001(\0132\016.MsgLe"
      "aveTableH\000\022\032\n\005raise\030\004 \001(\0132\t.MsgRaiseH\000\022\030"
      "\n\004fold\030\005 \001(\0132\010.MsgFoldH\000\022\030\n\004call\030\006 \001(\0132\010"
      ".MsgCallH\000B\t\n\007payload\"w\n\010Response\022\030\n\005err"
      "or\030\001 \001(\0162\t.MsgError\022\"\n\tlobbyView\030\002 \001(\0132\r"
      ".MsgLobbyViewH\000\022\"\n\ttableView\030\003 \001(\0132\r.Msg"
      "TableViewH\000B\t\n\007payload\"\034\n\010MsgLogin\022\020\n\010us"
      "ername\030\001 \001(\t\"\037\n\014MsgJoinTable\022\017\n\007tableId\030"
      "\001 \001(\r\"\017\n\rMsgLeaveTable\"\031\n\010MsgRaise\022\r\n\005ch"
      "ips\030\001 \001(\005\"\t\n\007MsgFold\"\t\n\007MsgCall\"K\n\007MsgCa"
      "rd\022 \n\tcardValue\030\001 \001(\0162\r.MsgCardValue\022\036\n\010"
      "cardSuit\030\002 \001(\0162\014.MsgCardSuit\"T\n\tMsgPlaye"
      "r\022\020\n\010username\030\001 \001(\t\022\r\n\005chips\030\002 \001(\r\022\026\n\004ha"
      "nd\030\003 \003(\0132\010.MsgCard\022\016\n\006dealer\030\004 \001(\010\"P\n\014Ms"
      "gTableInfo\022\r\n\005index\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022"
      "\022\n\nmaxPlayers\030\003 \001(\r\022\017\n\007players\030\004 \001(\r\"-\n\014"
      "MsgLobbyView\022\035\n\006tables\030\001 \003(\0132\r.MsgTableI"
      "nfo\"\236\001\n\014MsgTableView\022$\n\013tableStatus\030\001 \001("
      "\0162\017.MsgTableStatus\022$\n\013roundStatus\030\002 \001(\0162"
      "\017.MsgRoundStatus\022\027\n\005cards\030\003 \003(\0132\010.MsgCar"
      "d\022\014\n\004pots\030\004 \003(\r\022\033\n\007players\030\005 \003(\0132\n.MsgPl"
      "ayer*S\n\010MsgError\022\023\n\017MsgErrorSuccess\020\000\022\030\n"
      "\024MsgErrorWrongMessage\020\001\022\030\n\024MsgErrorInval"
      "idValue\020\002*\217\001\n\016MsgTableStatus\022\031\n\025MsgTable"
      "StatusUnknown\020\000\022#\n\037MsgTableStatusWaiting"
      "ForPlayers\020\001\022 \n\034MsgTableStatusGameInProg"
      "ress\020\002\022\033\n\027MsgTableStatusGameEnded\020\003*\246\001\n\016"
      "MsgRoundStatus\022\031\n\025MsgRoundStatusUnknown\020"
      "\000\022\031\n\025MsgRoundStatusPreFlop\020\001\022\026\n\022MsgRound"
      "StatusFlop\020\002\022\026\n\022MsgRoundStatusTurn\020\003\022\027\n\023"
      "MsgRoundStatusRiver\020\004\022\025\n\021MsgRoundStatusE"
      "nd\020\005*\304\002\n\014MsgCardValue\022\026\n\022MsgCardValueUnk"
      "own\020\000\022\023\n\017MsgCardValueTwo\020\002\022\025\n\021MsgCardVal"
      "ueThree\020\003\022\024\n\020MsgCardValueFour\020\004\022\024\n\020MsgCa"
      "rdValueFive\020\005\022\023\n\017MsgCardValueSix\020\006\022\025\n\021Ms"
      "gCardValueSeven\020\007\022\025\n\021MsgCardValueEight\020\010"
      "\022\024\n\020MsgCardValueNine\020\t\022\023\n\017MsgCardValueTe"
      "n\020\n\022\024\n\020MsgCardValueJack\020\013\022\025\n\021MsgCardValu"
      "eQueen\020\014\022\024\n\020MsgCardValueKing\020\r\022\023\n\017MsgCar"
      "dValueAce\020\016*\201\001\n\013MsgCardSuit\022\025\n\021MsgCardSu"
      "itUnkown\020\000\022\025\n\021MsgCardSuitSpades\020\001\022\025\n\021Msg"
      "CardSuitHearts\020\002\022\027\n\023MsgCardSuitDiamonds\020"
      "\003\022\024\n\020MsgCardSuitClubs\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1791);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Protocol_2eproto
const ::google::protobuf::EnumDescriptor* MsgError_descriptor() {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocol_2eproto::file_level_enum_descriptors[0];
}
bool MsgError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgTableStatus_descriptor() {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocol_2eproto::file_level_enum_descriptors[1];
}
bool MsgTableStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgRoundStatus_descriptor() {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocol_2eproto::file_level_enum_descriptors[2];
}
bool MsgRoundStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgCardValue_descriptor() {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocol_2eproto::file_level_enum_descriptors[3];
}
bool MsgCardValue_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgCardSuit_descriptor() {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocol_2eproto::file_level_enum_descriptors[4];
}
bool MsgCardSuit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::_Request_default_instance_.login_ = const_cast< ::MsgLogin*>(
      ::MsgLogin::internal_default_instance());
  ::_Request_default_instance_.jointable_ = const_cast< ::MsgJoinTable*>(
      ::MsgJoinTable::internal_default_instance());
  ::_Request_default_instance_.leavetable_ = const_cast< ::MsgLeaveTable*>(
      ::MsgLeaveTable::internal_default_instance());
  ::_Request_default_instance_.raise_ = const_cast< ::MsgRaise*>(
      ::MsgRaise::internal_default_instance());
  ::_Request_default_instance_.fold_ = const_cast< ::MsgFold*>(
      ::MsgFold::internal_default_instance());
  ::_Request_default_instance_.call_ = const_cast< ::MsgCall*>(
      ::MsgCall::internal_default_instance());
}
void Request::set_allocated_login(::MsgLogin* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    set_has_login();
    payload_.login_ = login;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.login)
}
void Request::set_allocated_jointable(::MsgJoinTable* jointable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (jointable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jointable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jointable, submessage_arena);
    }
    set_has_jointable();
    payload_.jointable_ = jointable;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.joinTable)
}
void Request::set_allocated_leavetable(::MsgLeaveTable* leavetable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (leavetable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      leavetable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leavetable, submessage_arena);
    }
    set_has_leavetable();
    payload_.leavetable_ = leavetable;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.leaveTable)
}
void Request::set_allocated_raise(::MsgRaise* raise) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (raise) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      raise = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, raise, submessage_arena);
    }
    set_has_raise();
    payload_.raise_ = raise;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.raise)
}
void Request::set_allocated_fold(::MsgFold* fold) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (fold) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fold = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fold, submessage_arena);
    }
    set_has_fold();
    payload_.fold_ = fold;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.fold)
}
void Request::set_allocated_call(::MsgCall* call) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (call) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      call = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, call, submessage_arena);
    }
    set_has_call();
    payload_.call_ = call;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.call)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kLoginFieldNumber;
const int Request::kJoinTableFieldNumber;
const int Request::kLeaveTableFieldNumber;
const int Request::kRaiseFieldNumber;
const int Request::kFoldFieldNumber;
const int Request::kCallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kLogin: {
      mutable_login()->::MsgLogin::MergeFrom(from.login());
      break;
    }
    case kJoinTable: {
      mutable_jointable()->::MsgJoinTable::MergeFrom(from.jointable());
      break;
    }
    case kLeaveTable: {
      mutable_leavetable()->::MsgLeaveTable::MergeFrom(from.leavetable());
      break;
    }
    case kRaise: {
      mutable_raise()->::MsgRaise::MergeFrom(from.raise());
      break;
    }
    case kFold: {
      mutable_fold()->::MsgFold::MergeFrom(from.fold());
      break;
    }
    case kCall: {
      mutable_call()->::MsgCall::MergeFrom(from.call());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Request)
}

void Request::SharedCtor() {
  clear_has_payload();
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:Request)
  switch (payload_case()) {
    case kLogin: {
      delete payload_.login_;
      break;
    }
    case kJoinTable: {
      delete payload_.jointable_;
      break;
    }
    case kLeaveTable: {
      delete payload_.leavetable_;
      break;
    }
    case kRaise: {
      delete payload_.raise_;
      break;
    }
    case kFold: {
      delete payload_.fold_;
      break;
    }
    case kCall: {
      delete payload_.call_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MsgLogin login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgJoinTable joinTable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jointable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgLeaveTable leaveTable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leavetable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgRaise raise = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raise()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgFold fold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgCall call = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_call()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgLogin login = 1;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *payload_.login_, output);
  }

  // .MsgJoinTable joinTable = 2;
  if (has_jointable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *payload_.jointable_, output);
  }

  // .MsgLeaveTable leaveTable = 3;
  if (has_leavetable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *payload_.leavetable_, output);
  }

  // .MsgRaise raise = 4;
  if (has_raise()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *payload_.raise_, output);
  }

  // .MsgFold fold = 5;
  if (has_fold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *payload_.fold_, output);
  }

  // .MsgCall call = 6;
  if (has_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *payload_.call_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgLogin login = 1;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *payload_.login_, deterministic, target);
  }

  // .MsgJoinTable joinTable = 2;
  if (has_jointable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *payload_.jointable_, deterministic, target);
  }

  // .MsgLeaveTable leaveTable = 3;
  if (has_leavetable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *payload_.leavetable_, deterministic, target);
  }

  // .MsgRaise raise = 4;
  if (has_raise()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *payload_.raise_, deterministic, target);
  }

  // .MsgFold fold = 5;
  if (has_fold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *payload_.fold_, deterministic, target);
  }

  // .MsgCall call = 6;
  if (has_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *payload_.call_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .MsgLogin login = 1;
    case kLogin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.login_);
      break;
    }
    // .MsgJoinTable joinTable = 2;
    case kJoinTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.jointable_);
      break;
    }
    // .MsgLeaveTable leaveTable = 3;
    case kLeaveTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.leavetable_);
      break;
    }
    // .MsgRaise raise = 4;
    case kRaise: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.raise_);
      break;
    }
    // .MsgFold fold = 5;
    case kFold: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.fold_);
      break;
    }
    // .MsgCall call = 6;
    case kCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.call_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kLogin: {
      mutable_login()->::MsgLogin::MergeFrom(from.login());
      break;
    }
    case kJoinTable: {
      mutable_jointable()->::MsgJoinTable::MergeFrom(from.jointable());
      break;
    }
    case kLeaveTable: {
      mutable_leavetable()->::MsgLeaveTable::MergeFrom(from.leavetable());
      break;
    }
    case kRaise: {
      mutable_raise()->::MsgRaise::MergeFrom(from.raise());
      break;
    }
    case kFold: {
      mutable_fold()->::MsgFold::MergeFrom(from.fold());
      break;
    }
    case kCall: {
      mutable_call()->::MsgCall::MergeFrom(from.call());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::_Response_default_instance_.lobbyview_ = const_cast< ::MsgLobbyView*>(
      ::MsgLobbyView::internal_default_instance());
  ::_Response_default_instance_.tableview_ = const_cast< ::MsgTableView*>(
      ::MsgTableView::internal_default_instance());
}
void Response::set_allocated_lobbyview(::MsgLobbyView* lobbyview) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (lobbyview) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lobbyview = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lobbyview, submessage_arena);
    }
    set_has_lobbyview();
    payload_.lobbyview_ = lobbyview;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.lobbyView)
}
void Response::set_allocated_tableview(::MsgTableView* tableview) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (tableview) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tableview = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tableview, submessage_arena);
    }
    set_has_tableview();
    payload_.tableview_ = tableview;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.tableView)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kErrorFieldNumber;
const int Response::kLobbyViewFieldNumber;
const int Response::kTableViewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kLobbyView: {
      mutable_lobbyview()->::MsgLobbyView::MergeFrom(from.lobbyview());
      break;
    }
    case kTableView: {
      mutable_tableview()->::MsgTableView::MergeFrom(from.tableview());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  error_ = 0;
  clear_has_payload();
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:Response)
  switch (payload_case()) {
    case kLobbyView: {
      delete payload_.lobbyview_;
      break;
    }
    case kTableView: {
      delete payload_.tableview_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  clear_payload();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MsgError error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::MsgError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgLobbyView lobbyView = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lobbyview()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgTableView tableView = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tableview()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgError error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // .MsgLobbyView lobbyView = 2;
  if (has_lobbyview()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *payload_.lobbyview_, output);
  }

  // .MsgTableView tableView = 3;
  if (has_tableview()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *payload_.tableview_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgError error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // .MsgLobbyView lobbyView = 2;
  if (has_lobbyview()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *payload_.lobbyview_, deterministic, target);
  }

  // .MsgTableView tableView = 3;
  if (has_tableview()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *payload_.tableview_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .MsgError error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  switch (payload_case()) {
    // .MsgLobbyView lobbyView = 2;
    case kLobbyView: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.lobbyview_);
      break;
    }
    // .MsgTableView tableView = 3;
    case kTableView: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.tableview_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  switch (from.payload_case()) {
    case kLobbyView: {
      mutable_lobbyview()->::MsgLobbyView::MergeFrom(from.lobbyview());
      break;
    }
    case kTableView: {
      mutable_tableview()->::MsgTableView::MergeFrom(from.tableview());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogin::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogin::MsgLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgLogin)
}
MsgLogin::MsgLogin(const MsgLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:MsgLogin)
}

void MsgLogin::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgLogin::~MsgLogin() {
  // @@protoc_insertion_point(destructor:MsgLogin)
  SharedDtor();
}

void MsgLogin::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogin::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLogin& MsgLogin::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgLogin();
  return *internal_default_instance();
}

MsgLogin* MsgLogin::New(::google::protobuf::Arena* arena) const {
  MsgLogin* n = new MsgLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MsgLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgLogin.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgLogin)
  return false;
#undef DO_
}

void MsgLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgLogin.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgLogin)
}

::google::protobuf::uint8* MsgLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgLogin.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgLogin)
  return target;
}

size_t MsgLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgLogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgLogin)
    MergeFrom(*source);
  }
}

void MsgLogin::MergeFrom(const MsgLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void MsgLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogin::CopyFrom(const MsgLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogin::IsInitialized() const {
  return true;
}

void MsgLogin::Swap(MsgLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogin::InternalSwap(MsgLogin* other) {
  using std::swap;
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogin::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgJoinTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgJoinTable::kTableIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgJoinTable::MsgJoinTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgJoinTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgJoinTable)
}
MsgJoinTable::MsgJoinTable(const MsgJoinTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tableid_ = from.tableid_;
  // @@protoc_insertion_point(copy_constructor:MsgJoinTable)
}

void MsgJoinTable::SharedCtor() {
  tableid_ = 0u;
  _cached_size_ = 0;
}

MsgJoinTable::~MsgJoinTable() {
  // @@protoc_insertion_point(destructor:MsgJoinTable)
  SharedDtor();
}

void MsgJoinTable::SharedDtor() {
}

void MsgJoinTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgJoinTable::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgJoinTable& MsgJoinTable::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgJoinTable();
  return *internal_default_instance();
}

MsgJoinTable* MsgJoinTable::New(::google::protobuf::Arena* arena) const {
  MsgJoinTable* n = new MsgJoinTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgJoinTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgJoinTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tableid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgJoinTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgJoinTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 tableId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgJoinTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgJoinTable)
  return false;
#undef DO_
}

void MsgJoinTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgJoinTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tableId = 1;
  if (this->tableid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tableid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgJoinTable)
}

::google::protobuf::uint8* MsgJoinTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgJoinTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 tableId = 1;
  if (this->tableid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tableid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgJoinTable)
  return target;
}

size_t MsgJoinTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgJoinTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 tableId = 1;
  if (this->tableid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tableid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgJoinTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgJoinTable)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgJoinTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgJoinTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgJoinTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgJoinTable)
    MergeFrom(*source);
  }
}

void MsgJoinTable::MergeFrom(const MsgJoinTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgJoinTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tableid() != 0) {
    set_tableid(from.tableid());
  }
}

void MsgJoinTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgJoinTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgJoinTable::CopyFrom(const MsgJoinTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgJoinTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgJoinTable::IsInitialized() const {
  return true;
}

void MsgJoinTable::Swap(MsgJoinTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgJoinTable::InternalSwap(MsgJoinTable* other) {
  using std::swap;
  swap(tableid_, other->tableid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgJoinTable::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgLeaveTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLeaveTable::MsgLeaveTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgLeaveTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgLeaveTable)
}
MsgLeaveTable::MsgLeaveTable(const MsgLeaveTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgLeaveTable)
}

void MsgLeaveTable::SharedCtor() {
  _cached_size_ = 0;
}

MsgLeaveTable::~MsgLeaveTable() {
  // @@protoc_insertion_point(destructor:MsgLeaveTable)
  SharedDtor();
}

void MsgLeaveTable::SharedDtor() {
}

void MsgLeaveTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLeaveTable::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLeaveTable& MsgLeaveTable::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgLeaveTable();
  return *internal_default_instance();
}

MsgLeaveTable* MsgLeaveTable::New(::google::protobuf::Arena* arena) const {
  MsgLeaveTable* n = new MsgLeaveTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLeaveTable::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgLeaveTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgLeaveTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgLeaveTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgLeaveTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgLeaveTable)
  return false;
#undef DO_
}

void MsgLeaveTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgLeaveTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgLeaveTable)
}

::google::protobuf::uint8* MsgLeaveTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgLeaveTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgLeaveTable)
  return target;
}

size_t MsgLeaveTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgLeaveTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLeaveTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgLeaveTable)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLeaveTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLeaveTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgLeaveTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgLeaveTable)
    MergeFrom(*source);
  }
}

void MsgLeaveTable::MergeFrom(const MsgLeaveTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgLeaveTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgLeaveTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgLeaveTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLeaveTable::CopyFrom(const MsgLeaveTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgLeaveTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLeaveTable::IsInitialized() const {
  return true;
}

void MsgLeaveTable::Swap(MsgLeaveTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLeaveTable::InternalSwap(MsgLeaveTable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLeaveTable::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgRaise::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRaise::kChipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRaise::MsgRaise()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgRaise();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgRaise)
}
MsgRaise::MsgRaise(const MsgRaise& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chips_ = from.chips_;
  // @@protoc_insertion_point(copy_constructor:MsgRaise)
}

void MsgRaise::SharedCtor() {
  chips_ = 0;
  _cached_size_ = 0;
}

MsgRaise::~MsgRaise() {
  // @@protoc_insertion_point(destructor:MsgRaise)
  SharedDtor();
}

void MsgRaise::SharedDtor() {
}

void MsgRaise::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRaise::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgRaise& MsgRaise::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgRaise();
  return *internal_default_instance();
}

MsgRaise* MsgRaise::New(::google::protobuf::Arena* arena) const {
  MsgRaise* n = new MsgRaise;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRaise::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgRaise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chips_ = 0;
  _internal_metadata_.Clear();
}

bool MsgRaise::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgRaise)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 chips = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgRaise)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgRaise)
  return false;
#undef DO_
}

void MsgRaise::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgRaise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chips = 1;
  if (this->chips() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chips(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgRaise)
}

::google::protobuf::uint8* MsgRaise::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgRaise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chips = 1;
  if (this->chips() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chips(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgRaise)
  return target;
}

size_t MsgRaise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgRaise)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 chips = 1;
  if (this->chips() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chips());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRaise::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgRaise)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRaise* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRaise>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgRaise)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgRaise)
    MergeFrom(*source);
  }
}

void MsgRaise::MergeFrom(const MsgRaise& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgRaise)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chips() != 0) {
    set_chips(from.chips());
  }
}

void MsgRaise::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgRaise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRaise::CopyFrom(const MsgRaise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgRaise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRaise::IsInitialized() const {
  return true;
}

void MsgRaise::Swap(MsgRaise* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRaise::InternalSwap(MsgRaise* other) {
  using std::swap;
  swap(chips_, other->chips_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRaise::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgFold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFold::MsgFold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgFold();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgFold)
}
MsgFold::MsgFold(const MsgFold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgFold)
}

void MsgFold::SharedCtor() {
  _cached_size_ = 0;
}

MsgFold::~MsgFold() {
  // @@protoc_insertion_point(destructor:MsgFold)
  SharedDtor();
}

void MsgFold::SharedDtor() {
}

void MsgFold::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgFold::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFold& MsgFold::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgFold();
  return *internal_default_instance();
}

MsgFold* MsgFold::New(::google::protobuf::Arena* arena) const {
  MsgFold* n = new MsgFold;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgFold::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgFold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgFold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgFold)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgFold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgFold)
  return false;
#undef DO_
}

void MsgFold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgFold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgFold)
}

::google::protobuf::uint8* MsgFold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgFold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgFold)
  return target;
}

size_t MsgFold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgFold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgFold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgFold)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgFold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgFold)
    MergeFrom(*source);
  }
}

void MsgFold::MergeFrom(const MsgFold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgFold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgFold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgFold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFold::CopyFrom(const MsgFold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgFold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFold::IsInitialized() const {
  return true;
}

void MsgFold::Swap(MsgFold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFold::InternalSwap(MsgFold* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgFold::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCall::MsgCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgCall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgCall)
}
MsgCall::MsgCall(const MsgCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgCall)
}

void MsgCall::SharedCtor() {
  _cached_size_ = 0;
}

MsgCall::~MsgCall() {
  // @@protoc_insertion_point(destructor:MsgCall)
  SharedDtor();
}

void MsgCall::SharedDtor() {
}

void MsgCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCall::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCall& MsgCall::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgCall();
  return *internal_default_instance();
}

MsgCall* MsgCall::New(::google::protobuf::Arena* arena) const {
  MsgCall* n = new MsgCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgCall::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MsgCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgCall)
  return false;
#undef DO_
}

void MsgCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgCall)
}

::google::protobuf::uint8* MsgCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgCall)
  return target;
}

size_t MsgCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgCall)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgCall)
    MergeFrom(*source);
  }
}

void MsgCall::MergeFrom(const MsgCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCall::CopyFrom(const MsgCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCall::IsInitialized() const {
  return true;
}

void MsgCall::Swap(MsgCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCall::InternalSwap(MsgCall* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgCall::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCard::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgCard::kCardValueFieldNumber;
const int MsgCard::kCardSuitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCard::MsgCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgCard();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgCard)
}
MsgCard::MsgCard(const MsgCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cardvalue_, &from.cardvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&cardsuit_) -
    reinterpret_cast<char*>(&cardvalue_)) + sizeof(cardsuit_));
  // @@protoc_insertion_point(copy_constructor:MsgCard)
}

void MsgCard::SharedCtor() {
  ::memset(&cardvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cardsuit_) -
      reinterpret_cast<char*>(&cardvalue_)) + sizeof(cardsuit_));
  _cached_size_ = 0;
}

MsgCard::~MsgCard() {
  // @@protoc_insertion_point(destructor:MsgCard)
  SharedDtor();
}

void MsgCard::SharedDtor() {
}

void MsgCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgCard::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCard& MsgCard::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgCard();
  return *internal_default_instance();
}

MsgCard* MsgCard::New(::google::protobuf::Arena* arena) const {
  MsgCard* n = new MsgCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgCard::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cardvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cardsuit_) -
      reinterpret_cast<char*>(&cardvalue_)) + sizeof(cardsuit_));
  _internal_metadata_.Clear();
}

bool MsgCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MsgCardValue cardValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cardvalue(static_cast< ::MsgCardValue >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgCardSuit cardSuit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cardsuit(static_cast< ::MsgCardSuit >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgCard)
  return false;
#undef DO_
}

void MsgCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgCardValue cardValue = 1;
  if (this->cardvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cardvalue(), output);
  }

  // .MsgCardSuit cardSuit = 2;
  if (this->cardsuit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cardsuit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgCard)
}

::google::protobuf::uint8* MsgCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgCardValue cardValue = 1;
  if (this->cardvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cardvalue(), target);
  }

  // .MsgCardSuit cardSuit = 2;
  if (this->cardsuit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cardsuit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgCard)
  return target;
}

size_t MsgCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgCard)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .MsgCardValue cardValue = 1;
  if (this->cardvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cardvalue());
  }

  // .MsgCardSuit cardSuit = 2;
  if (this->cardsuit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cardsuit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgCard)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgCard)
    MergeFrom(*source);
  }
}

void MsgCard::MergeFrom(const MsgCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cardvalue() != 0) {
    set_cardvalue(from.cardvalue());
  }
  if (from.cardsuit() != 0) {
    set_cardsuit(from.cardsuit());
  }
}

void MsgCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCard::CopyFrom(const MsgCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCard::IsInitialized() const {
  return true;
}

void MsgCard::Swap(MsgCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCard::InternalSwap(MsgCard* other) {
  using std::swap;
  swap(cardvalue_, other->cardvalue_);
  swap(cardsuit_, other->cardsuit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgCard::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPlayer::kUsernameFieldNumber;
const int MsgPlayer::kChipsFieldNumber;
const int MsgPlayer::kHandFieldNumber;
const int MsgPlayer::kDealerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPlayer::MsgPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgPlayer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPlayer)
}
MsgPlayer::MsgPlayer(const MsgPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hand_(from.hand_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&chips_, &from.chips_,
    static_cast<size_t>(reinterpret_cast<char*>(&dealer_) -
    reinterpret_cast<char*>(&chips_)) + sizeof(dealer_));
  // @@protoc_insertion_point(copy_constructor:MsgPlayer)
}

void MsgPlayer::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chips_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dealer_) -
      reinterpret_cast<char*>(&chips_)) + sizeof(dealer_));
  _cached_size_ = 0;
}

MsgPlayer::~MsgPlayer() {
  // @@protoc_insertion_point(destructor:MsgPlayer)
  SharedDtor();
}

void MsgPlayer::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPlayer::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgPlayer& MsgPlayer::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgPlayer();
  return *internal_default_instance();
}

MsgPlayer* MsgPlayer::New(::google::protobuf::Arena* arena) const {
  MsgPlayer* n = new MsgPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hand_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chips_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dealer_) -
      reinterpret_cast<char*>(&chips_)) + sizeof(dealer_));
  _internal_metadata_.Clear();
}

bool MsgPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgPlayer.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MsgCard hand = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_hand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool dealer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dealer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPlayer)
  return false;
#undef DO_
}

void MsgPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgPlayer.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // uint32 chips = 2;
  if (this->chips() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chips(), output);
  }

  // repeated .MsgCard hand = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hand_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hand(static_cast<int>(i)), output);
  }

  // bool dealer = 4;
  if (this->dealer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->dealer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPlayer)
}

::google::protobuf::uint8* MsgPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgPlayer.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // uint32 chips = 2;
  if (this->chips() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chips(), target);
  }

  // repeated .MsgCard hand = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hand_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->hand(static_cast<int>(i)), deterministic, target);
  }

  // bool dealer = 4;
  if (this->dealer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->dealer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPlayer)
  return target;
}

size_t MsgPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MsgCard hand = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->hand_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hand(static_cast<int>(i)));
    }
  }

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // uint32 chips = 2;
  if (this->chips() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chips());
  }

  // bool dealer = 4;
  if (this->dealer() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgPlayer)
    MergeFrom(*source);
  }
}

void MsgPlayer::MergeFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hand_.MergeFrom(from.hand_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.chips() != 0) {
    set_chips(from.chips());
  }
  if (from.dealer() != 0) {
    set_dealer(from.dealer());
  }
}

void MsgPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlayer::CopyFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlayer::IsInitialized() const {
  return true;
}

void MsgPlayer::Swap(MsgPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPlayer::InternalSwap(MsgPlayer* other) {
  using std::swap;
  hand_.InternalSwap(&other->hand_);
  username_.Swap(&other->username_);
  swap(chips_, other->chips_);
  swap(dealer_, other->dealer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgPlayer::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgTableInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTableInfo::kIndexFieldNumber;
const int MsgTableInfo::kNameFieldNumber;
const int MsgTableInfo::kMaxPlayersFieldNumber;
const int MsgTableInfo::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTableInfo::MsgTableInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgTableInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgTableInfo)
}
MsgTableInfo::MsgTableInfo(const MsgTableInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&players_) -
    reinterpret_cast<char*>(&index_)) + sizeof(players_));
  // @@protoc_insertion_point(copy_constructor:MsgTableInfo)
}

void MsgTableInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&players_) -
      reinterpret_cast<char*>(&index_)) + sizeof(players_));
  _cached_size_ = 0;
}

MsgTableInfo::~MsgTableInfo() {
  // @@protoc_insertion_point(destructor:MsgTableInfo)
  SharedDtor();
}

void MsgTableInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgTableInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTableInfo::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgTableInfo& MsgTableInfo::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgTableInfo();
  return *internal_default_instance();
}

MsgTableInfo* MsgTableInfo::New(::google::protobuf::Arena* arena) const {
  MsgTableInfo* n = new MsgTableInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTableInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&players_) -
      reinterpret_cast<char*>(&index_)) + sizeof(players_));
  _internal_metadata_.Clear();
}

bool MsgTableInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgTableInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgTableInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxPlayers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 players = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgTableInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgTableInfo)
  return false;
#undef DO_
}

void MsgTableInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgTableInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 maxPlayers = 3;
  if (this->maxplayers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxplayers(), output);
  }

  // uint32 players = 4;
  if (this->players() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->players(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgTableInfo)
}

::google::protobuf::uint8* MsgTableInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgTableInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgTableInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 maxPlayers = 3;
  if (this->maxplayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxplayers(), target);
  }

  // uint32 players = 4;
  if (this->players() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->players(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgTableInfo)
  return target;
}

size_t MsgTableInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgTableInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 maxPlayers = 3;
  if (this->maxplayers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayers());
  }

  // uint32 players = 4;
  if (this->players() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->players());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTableInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTableInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTableInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgTableInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgTableInfo)
    MergeFrom(*source);
  }
}

void MsgTableInfo::MergeFrom(const MsgTableInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgTableInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.maxplayers() != 0) {
    set_maxplayers(from.maxplayers());
  }
  if (from.players() != 0) {
    set_players(from.players());
  }
}

void MsgTableInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTableInfo::CopyFrom(const MsgTableInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgTableInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTableInfo::IsInitialized() const {
  return true;
}

void MsgTableInfo::Swap(MsgTableInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTableInfo::InternalSwap(MsgTableInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(index_, other->index_);
  swap(maxplayers_, other->maxplayers_);
  swap(players_, other->players_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTableInfo::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgLobbyView::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLobbyView::kTablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLobbyView::MsgLobbyView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgLobbyView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgLobbyView)
}
MsgLobbyView::MsgLobbyView(const MsgLobbyView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tables_(from.tables_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MsgLobbyView)
}

void MsgLobbyView::SharedCtor() {
  _cached_size_ = 0;
}

MsgLobbyView::~MsgLobbyView() {
  // @@protoc_insertion_point(destructor:MsgLobbyView)
  SharedDtor();
}

void MsgLobbyView::SharedDtor() {
}

void MsgLobbyView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLobbyView::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLobbyView& MsgLobbyView::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgLobbyView();
  return *internal_default_instance();
}

MsgLobbyView* MsgLobbyView::New(::google::protobuf::Arena* arena) const {
  MsgLobbyView* n = new MsgLobbyView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLobbyView::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgLobbyView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  _internal_metadata_.Clear();
}

bool MsgLobbyView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgLobbyView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgTableInfo tables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgLobbyView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgLobbyView)
  return false;
#undef DO_
}

void MsgLobbyView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgLobbyView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MsgTableInfo tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tables(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgLobbyView)
}

::google::protobuf::uint8* MsgLobbyView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgLobbyView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MsgTableInfo tables = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgLobbyView)
  return target;
}

size_t MsgLobbyView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgLobbyView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MsgTableInfo tables = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tables(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLobbyView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgLobbyView)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLobbyView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLobbyView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgLobbyView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgLobbyView)
    MergeFrom(*source);
  }
}

void MsgLobbyView::MergeFrom(const MsgLobbyView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgLobbyView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
}

void MsgLobbyView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgLobbyView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLobbyView::CopyFrom(const MsgLobbyView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgLobbyView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLobbyView::IsInitialized() const {
  return true;
}

void MsgLobbyView::Swap(MsgLobbyView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLobbyView::InternalSwap(MsgLobbyView* other) {
  using std::swap;
  tables_.InternalSwap(&other->tables_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLobbyView::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgTableView::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTableView::kTableStatusFieldNumber;
const int MsgTableView::kRoundStatusFieldNumber;
const int MsgTableView::kCardsFieldNumber;
const int MsgTableView::kPotsFieldNumber;
const int MsgTableView::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTableView::MsgTableView()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protocol_2eproto::InitDefaultsMsgTableView();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgTableView)
}
MsgTableView::MsgTableView(const MsgTableView& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cards_(from.cards_),
      pots_(from.pots_),
      players_(from.players_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tablestatus_, &from.tablestatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&roundstatus_) -
    reinterpret_cast<char*>(&tablestatus_)) + sizeof(roundstatus_));
  // @@protoc_insertion_point(copy_constructor:MsgTableView)
}

void MsgTableView::SharedCtor() {
  ::memset(&tablestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roundstatus_) -
      reinterpret_cast<char*>(&tablestatus_)) + sizeof(roundstatus_));
  _cached_size_ = 0;
}

MsgTableView::~MsgTableView() {
  // @@protoc_insertion_point(destructor:MsgTableView)
  SharedDtor();
}

void MsgTableView::SharedDtor() {
}

void MsgTableView::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTableView::descriptor() {
  ::protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgTableView& MsgTableView::default_instance() {
  ::protobuf_Protocol_2eproto::InitDefaultsMsgTableView();
  return *internal_default_instance();
}

MsgTableView* MsgTableView::New(::google::protobuf::Arena* arena) const {
  MsgTableView* n = new MsgTableView;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTableView::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgTableView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  pots_.Clear();
  players_.Clear();
  ::memset(&tablestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roundstatus_) -
      reinterpret_cast<char*>(&tablestatus_)) + sizeof(roundstatus_));
  _internal_metadata_.Clear();
}

bool MsgTableView::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgTableView)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MsgTableStatus tableStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tablestatus(static_cast< ::MsgTableStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MsgRoundStatus roundStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_roundstatus(static_cast< ::MsgRoundStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MsgCard cards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pots = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pots())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_pots())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MsgPlayer players = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgTableView)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgTableView)
  return false;
#undef DO_
}

void MsgTableView::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgTableView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgTableStatus tableStatus = 1;
  if (this->tablestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tablestatus(), output);
  }

  // .MsgRoundStatus roundStatus = 2;
  if (this->roundstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->roundstatus(), output);
  }

  // repeated .MsgCard cards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cards(static_cast<int>(i)), output);
  }

  // repeated uint32 pots = 4;
  if (this->pots_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pots_cached_byte_size_));
  }
  for (int i = 0, n = this->pots_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->pots(i), output);
  }

  // repeated .MsgPlayer players = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->players(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgTableView)
}

::google::protobuf::uint8* MsgTableView::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgTableView)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MsgTableStatus tableStatus = 1;
  if (this->tablestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tablestatus(), target);
  }

  // .MsgRoundStatus roundStatus = 2;
  if (this->roundstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->roundstatus(), target);
  }

  // repeated .MsgCard cards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cards(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 pots = 4;
  if (this->pots_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pots_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->pots_, target);
  }

  // repeated .MsgPlayer players = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->players(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgTableView)
  return target;
}

size_t MsgTableView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgTableView)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .MsgCard cards = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cards(static_cast<int>(i)));
    }
  }

  // repeated uint32 pots = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pots_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pots_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .MsgPlayer players = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // .MsgTableStatus tableStatus = 1;
  if (this->tablestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tablestatus());
  }

  // .MsgRoundStatus roundStatus = 2;
  if (this->roundstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->roundstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTableView::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgTableView)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTableView* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTableView>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgTableView)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgTableView)
    MergeFrom(*source);
  }
}

void MsgTableView::MergeFrom(const MsgTableView& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgTableView)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  pots_.MergeFrom(from.pots_);
  players_.MergeFrom(from.players_);
  if (from.tablestatus() != 0) {
    set_tablestatus(from.tablestatus());
  }
  if (from.roundstatus() != 0) {
    set_roundstatus(from.roundstatus());
  }
}

void MsgTableView::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgTableView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTableView::CopyFrom(const MsgTableView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgTableView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTableView::IsInitialized() const {
  return true;
}

void MsgTableView::Swap(MsgTableView* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTableView::InternalSwap(MsgTableView* other) {
  using std::swap;
  cards_.InternalSwap(&other->cards_);
  pots_.InternalSwap(&other->pots_);
  players_.InternalSwap(&other->players_);
  swap(tablestatus_, other->tablestatus_);
  swap(roundstatus_, other->roundstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTableView::GetMetadata() const {
  protobuf_Protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
