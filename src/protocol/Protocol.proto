syntax = "proto3";

// Errors
enum Error {
    ErrorSuccess = 0;
    ErrorWrongMessage = 1;
    ErrorInvalidValue = 2;
}

// Table statuses
enum DummyTableStatus {
    DummyTableStatusUnknown = 0;
    DummyTableStatusWaitingForPlayers = 1;
    DummyTableStatusGameInProgress = 2;
    DummyTableStatusGameEnded = 3;
}

// Round statuses
enum DummyRoundStatus {
    DummyRoundStatusUnknown = 0;
    DummyRoundStatusPreFlop = 1;
    DummyRoundStatusFlop = 2;
    DummyRoundStatusTurn = 3;
    DummyRoundStatusRiver = 4;
    DummyRoundStatusEnd = 5;
}

// Card values
enum DummyCardValue {
    DummyCardValueUnkown = 0;
    DummyCardValueTwo = 2;
    DummyCardValueThree = 3;
    DummyCardValueFour = 4;
    DummyCardValueFive = 5;
    DummyCardValueSix = 6;
    DummyCardValueSeven = 7;
    DummyCardValueEight = 8;
    DummyCardValueNine = 9;
    DummyCardValueTen = 10;
    DummyCardValueJack = 11;
    DummyCardValueQueen = 12;
    DummyCardValueKing = 13;
    DummyCardValueAce = 14;
}

// Card suits
enum DummyCardSuit {
    DummyCardSuitUnkown = 0;
    DummyCardSuitSpades = 1;
    DummyCardSuitHearts = 2;
    DummyCardSuitDiamonds = 3;
    DummyCardSuitClubs = 4;
}

// Request message (sent by client)
message Request {
    oneof payload {
        Login login = 1;
        CreateTable createTable = 2;
        JoinTable joinTable = 3;
        LeaveTable leaveTable = 4;
        Raise raise = 5;
        Fold fold = 6;
        Call call = 7;
    }
}


// Response message (sent by server)
message Response {
    Error error = 1;
    oneof payload {
        DummyLobbyView lobbyView = 2;
        DummyTableView tableView = 3;
    }
}

// Login request message
message Login {
    string username = 1;
}

// Create table request message
message CreateTable {
    string name = 1;
    uint32 maxPlayers = 2;
}

// Join table request message
message JoinTable {
    string name = 1;
}

// Leave table request message
message LeaveTable {
    string name = 1;
}

// Raise request message
message Raise {
    int32 chips = 1;
}

// Fold request message
message Fold {
}

// Call request message
message Call {
}

// Card
message DummyCard {
    DummyCardValue cardValue = 1;
    DummyCardSuit cardSuit = 2;
}

// Player
message DummyPlayer {
    string username = 1;
    uint32 chips = 2;
    repeated DummyCard hand = 3; // optional
    bool dealer = 4;
}

// Table informations (for Lobby View)
message DummyTableInfo {
    uint32 index = 1;
    string name = 2;
    uint32 maxPlayers = 3;
    uint32 players = 4;
}

// Lobby view response message
message DummyLobbyView {
    repeated DummyTableInfo tables = 1; // optional
}

// Table (during the game) response message
message DummyTableView {
    DummyTableStatus tableStatus = 1;
    DummyRoundStatus roundStatus = 2;
    repeated DummyCard cards = 3; // optional
    repeated uint32 pots = 4; // optional
    repeated DummyPlayer players = 5;
}
